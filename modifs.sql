--Exercice 3


--a)
ALTER TABLE TELEPHONE ADD CONSTRAINT verif_tel_localisation CHECK (LOWER(TEL_LOCALISATION) IN ('domicile', 'portable', 'bureau'));

--b)
--prise en compte fausse localisation :  violation de la contrainte du champ tel_localisation
INSERT INTO TELEPHONE (TEL_ID,CLI_ID,TYP_CODE, TEL_NUMERO, TEL_LOCALISATION)
VALUES (300,1,'GSM','07-12-58-96-00','xxxxxx');

--omission localisation
INSERT INTO TELEPHONE (TEL_ID,CLI_ID,TYP_CODE, TEL_NUMERO)
VALUES (300,1,'GSM','07-12-58-96-00');

--c)
--erreur violation contrainte d'intégrité - enregistrements existants : Impossiblité de suppression à cause des contraintes liés au référencement par les clés étrangères.
DELETE FROM CLIENT
WHERE UPPER(REPLACE(CLI_NOM,' ','')) = 'DUPONT'
AND UPPER(CLI_PRENOM) = 'ALAIN';
--success ?
--Refus de suppression car 

-- Ajout du ON DELETE CASCADE pour établir le lien de suppression.
ALTER TABLE TELEPHONE drop CONSTRAINT FK_TEL_CLIENT;
ALTER TABLE TELEPHONE ADD CONSTRAINT FK_TEL_CLIENT FOREIGN KEY (CLI_ID) REFERENCES CLIENT (CLI_ID) ON DELETE CASCADE;

-- cette modification est également necessaire pour les tables PLANNING, EMAIL et ADRESSE.
--PLANNING
ALTER TABLE PLANNING drop CONSTRAINT FK_PLANNING_CLIENT;
ALTER TABLE PLANNING ADD CONSTRAINT FK_PLANNING_CLIENT FOREIGN KEY (CLI_ID) REFERENCES CLIENT (CLI_ID) ON DELETE CASCADE;
--EMAIL
ALTER TABLE EMAIL drop CONSTRAINT FK_EMAIL_CLI_ID;
ALTER TABLE EMAIL ADD CONSTRAINT FK_EMAIL_CLI_ID FOREIGN KEY (CLI_ID) REFERENCES CLIENT (CLI_ID) ON DELETE CASCADE;
--ADRESSE
ALTER TABLE ADRESSE drop CONSTRAINT FK_ADRESSE_CLIENT;
ALTER TABLE ADRESSE ADD CONSTRAINT FK_ADRESSE_CLIENT FOREIGN KEY (CLI_ID) REFERENCES CLIENT (CLI_ID) ON DELETE CASCADE;


--Pour la table TITRE
-- CLIENT
ALTER TABLE CLIENT drop CONSTRAINT FK_CLIENT_TITRE;
ALTER TABLE CLIENT ADD CONSTRAINT FK_CLIENT_TITRE FOREIGN KEY (TIT_CODE) REFERENCES TITRE (TIT_CODE) ON DELETE CASCADE;

--c)
--Suppression reussie
DELETE FROM CLIENT
WHERE UPPER(REPLACE(CLI_NOM,' ','')) = 'DUPONT'
AND UPPER(CLI_PRENOM) = 'ALAIN';

--Tentative de suppression d'un client ayant une facture : ECHEC
--erreur violation contrainte d'intégrité - enregistrements existants
DELETE FROM CLIENT
WHERE CLI_ID = 16;


--Exercie 4
--1) 9 index existants.

--2)
--EMAIL
CREATE INDEX  I_FK_EMAIL_CLI_ID  ON EMAIL (CLI_ID);
--TRF_CHB
CREATE INDEX  I_FK_TRF_CHB_CHAMBRE  ON TRF_CHB (CHB_ID);
CREATE INDEX  I_FK_TRF_CHB_TARIF  ON TRF_CHB (TRF_DATE_DEBUT);
--CHAMBRE
CREATE INDEX  I_FK_CHAMBRE  ON CHAMBRE (CHB_COMMUNIQUE);
CREATE INDEX  I_FK_CHAMBRE_AGT  ON CHAMBRE (AGT_ID);

--CLIENT
CREATE INDEX  i_cli_nom  ON CLIENT (CLI_NOM ASC);

--FACTURE
CREATE INDEX  i_fac_date_cli_id  ON FACTURE (FAC_DATE DESC, CLI_ID ASC);

--Exercice 5

--1) Assignement des privilèges en public pour la table client
GRANT SELECT ON CLIENT TO PUBLIC ;

--test exemple
--SELECT * FROM alik002.client;


--2)
--privilège insertion à vann0012
GRANT INSERT ON CLIENT TO vann0012;

--privilège modification à vann0012 sur le champ nbpers
GRANT UPDATE(NB_PERS) ON PLANNING TO vann0012;

--privilège modification de la table CLIENT sauf le champ cli_id à vann0012
GRANT UPDATE(TIT_CODE ,CLI_NOM ,CLI_PRENOM ,CLI_ENSEIGNE) ON CLIENT TO vann0012;

--Privilège de lecture de la table CLIENT en cascade à vann0012
GRANT SELECT ON CLIENT TO vann0012 WITH GRANT OPTION;


--Reprise des privilèges
REVOKE ALL PRIVILEGES  ON CLIENT FROM PUBLIC ;
REVOKE ALL PRIVILEGES  ON PLANNING FROM PUBLIC ;

--3)
CREATE ROLE RO_HOTEL_alik0002;
    GRANT UPDATE(agt_id) ON CHAMBRE TO RO_HOTEL_alik0002;
    GRANT SELECT, INSERT, UPDATE ON PLANNING TO RO_HOTEL_alik0002;
    GRANT SELECT, INSERT, UPDATE ON TARIF TO RO_HOTEL_alik0002;
    
--4)
GRANT RO_HOTEL_alik0002 TO vann0012,zerm0002;

--5) suppression du role
DROP ROLE RO_HOTEL_alik0002;
